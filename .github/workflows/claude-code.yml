name: Claude Code

on:
  # Run on pull request comments
  pull_request_comment:
    types: [created]
  # Run on issue comments  
  issue_comment:
    types: [created]
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Task for Claude to perform'
        required: true
        type: string

jobs:
  claude-code:
    # Only run if the comment contains "@claude" or it's a manual trigger
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_comment' && contains(github.event.comment.body, '@claude')) ||
      github.event_name == 'workflow_dispatch'
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # For PR comments, checkout the PR branch
          ref: ${{ github.event_name == 'issue_comment' && github.event.issue.pull_request && format('refs/pull/{0}/head', github.event.issue.number) || github.ref }}
          
      - name: Set up environment
        run: |
          echo "Setting up environment..."
          
      - name: Run Claude Code
        env:
          # You'll need to add ANTHROPIC_API_KEY as a repository secret
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Extract the prompt from the comment or use the manual input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PROMPT="${{ github.event.inputs.prompt }}"
          else
            # Extract everything after "@claude" in the comment
            PROMPT=$(echo "${{ github.event.comment.body }}" | sed 's/.*@claude\s*//')
          fi
          
          echo "Running Claude with prompt: $PROMPT"
          
          # Install Claude CLI if needed
          npm install -g @anthropic-ai/claude-cli
          
          # Run Claude with the prompt
          claude-cli "$PROMPT" --yes --no-interactive
          
      - name: Commit and push changes
        if: success()
        run: |
          git config --global user.name "Claude Code Bot"
          git config --global user.email "claude-bot@example.com"
          
          # Check if there are changes
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Claude Code: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.prompt || 'Automated changes' }}"
            git push
          else
            echo "No changes to commit"
          fi
          
      - name: Comment on issue/PR
        if: github.event_name == 'issue_comment' || github.event_name == 'pull_request_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'âœ… Claude Code has completed the requested task. Check the latest commits for changes.'
            };
            github.rest.issues.createComment(comment);